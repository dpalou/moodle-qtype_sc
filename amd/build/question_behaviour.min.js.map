{"version":3,"sources":["../src/question_behaviour.js"],"names":["define","$","clickoption","clickedRadio","questionid","highlighting","distractorCheckbox","find","data","is","prop","linethroughrows","highlightrows","toggleclearselection","clickDistractorButton","clickedDistractor","optionRadio","hiddenOptionRadio","isOptionSelected","numHiddenOptionRadio","length","numOptionRadios","numberDistractorsChosen","numDistractors","optionlabels","i","removeClass","chosenDistractors","j","optionlabel","addClass","rows","notChosenDistractors","row","clearselectionrow","init","optionHighlighting","distractors","change","options","initReadonly"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module      qtype_sc/question_behvaiour.js\n * @author      Amr Hourani (amr.hourani@id.ethz.ch)\n * @author      Martin Hanusch (martin.hanusch@let.ethz.ch)\n * @author      JÃ¼rgen Zimmer (juergen.zimmer@edaktik.at)\n * @author      Andreas Hruska (andreas.hruska@edaktik.at)\n * @copyright   2018 ETHZ {@link http://ethz.ch/}\n * @copyright   2017 eDaktik GmbH {@link http://www.edaktik.at}\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery'], function($) {\n\n    /**\n     * Manages checking and unchecking of option radio buttons.\n     * @param {Object} clickedRadio The clicked radio.\n     * @param {int} questionid The question id.\n     * @param {boolean} highlighting questionhighlighting.\n     */\n    function clickoption(clickedRadio, questionid, highlighting) {\n\n        var distractorCheckbox = $('table#questiontable' + questionid)\n            .find('#q' + questionid + '_distractor' + clickedRadio.data('number'));\n\n        if (clickedRadio.is(':checked')) {\n            if (distractorCheckbox) {\n                $(distractorCheckbox).prop(\"checked\", false);\n            }\n        }\n\n        linethroughrows(questionid);\n        highlightrows(questionid, highlighting);\n        toggleclearselection(questionid);\n    }\n\n    /**\n     * Manages checking and unchecking of distractor radio buttons.\n     * @param {Object} clickedDistractor The clicked distractor.\n     * @param {int} questionid The question id.\n     * @param {boolean} highlighting questionhighlighting.\n     */\n    function clickDistractorButton(clickedDistractor, questionid, highlighting) {\n\n        var optionRadio = $('table#questiontable' + questionid)\n            .find('#q' + questionid + '_option' + clickedDistractor.data('number'));\n\n        var hiddenOptionRadio = $('table#questiontable' + questionid)\n            .find('#q' + questionid + '_option-1');\n\n        if (clickedDistractor.is(':checked')) {\n            if (optionRadio && hiddenOptionRadio) {\n                if (optionRadio.is(':checked')) {\n                    $(hiddenOptionRadio).prop('checked', true);\n                }\n            }\n        }\n\n        linethroughrows(questionid);\n        highlightrows(questionid, highlighting);\n        toggleclearselection(questionid);\n    }\n\n    /**\n     * Checks wether more than 0 options are selected.\n     * @param {int} questionid The question id.\n     * @returns {boolean}\n     */\n    function isOptionSelected(questionid) {\n\n        var numHiddenOptionRadio = $('table#questiontable' + questionid)\n            .find('#q' + questionid + '_option-1:checked').length;\n\n        var numOptionRadios = $('table#questiontable' + questionid)\n            .find('[id^=\"q' + questionid + '_option\"]:checked').length;\n\n        return numOptionRadios == 1 && numHiddenOptionRadio == 0;\n    }\n\n    /**\n     * Returns the number of selected distractors.\n     * @param {int} questionid The question id.\n     * @returns {int}\n     */\n    function numberDistractorsChosen(questionid) {\n\n        var numDistractors = $('table#questiontable' + questionid)\n            .find('.distractorcheckbox:checked').length;\n\n        return numDistractors;\n    }\n\n    /**\n     * Strikes out options which active distractor.\n     * @param {int} questionid The question id.\n     */\n    function linethroughrows(questionid) {\n\n        var optionlabels = $('table#questiontable' + questionid)\n            .find('label[for^=\"q' + questionid + '_option\"]');\n\n        for (var i = 0; i < optionlabels.length; i++) {\n            $(optionlabels[i]).removeClass('linethrough');\n        }\n\n        var chosenDistractors = $('table#questiontable' + questionid)\n            .find('input.distractorcheckbox:checked');\n\n        for (var j = 0; j < chosenDistractors.length; j++) {\n            var optionlabel = $('table#questiontable' + questionid)\n                .find('label[for=\"q' + questionid + '_option' + $(chosenDistractors[j]).data('number') + '\"]')[0];\n            $(optionlabel).addClass('linethrough');\n        }\n    }\n\n    /**\n     * Highlights options which have been selected and are not marked as distractors.\n     * @param {int} questionid The question id.\n     * @param {boolean} highlighting questionhighlighting.\n     */\n    function highlightrows(questionid, highlighting) {\n        if (highlighting) {\n\n            var rows = $('table#questiontable' + questionid)\n                .find('tr[class^=\"optionrow\"].highlight');\n\n            for (var i = 0; i < rows.length; i++) {\n                $(rows[i]).removeClass('highlight');\n            }\n\n            if (numberDistractorsChosen(questionid) > 0 && !isOptionSelected(questionid)) {\n                var notChosenDistractors = $('table#questiontable' + questionid)\n                    .find('input.distractorcheckbox:not(:checked)');\n\n                for (var j = 0; j < notChosenDistractors.length; j++) {\n                    var row = $('table#questiontable' + questionid)\n                        .find('tr[class*=\"optionrow' + $(notChosenDistractors[j]).data('number') + '\"]');\n                    row.addClass('highlight');\n                }\n            }\n        }\n    }\n\n    /**\n     * Clears selection.\n     * @param {int} questionid The question id.\n     */\n    function toggleclearselection(questionid) {\n\n        var clearselectionrow = $('table#questiontable' + questionid + ' .optionrow-1')[0];\n\n        if (clearselectionrow) {\n            if (!isOptionSelected(questionid)) {\n                $(clearselectionrow).addClass('sr-only');\n            } else {\n                $(clearselectionrow).removeClass('sr-only');\n            }\n        }\n    }\n\n    return {\n        init: function(optionHighlighting, questionid) {\n\n            var distractors = $('table#questiontable' + questionid + ' input.distractorcheckbox');\n\n            for (var i = 0; i < distractors.length; i++) {\n                $(distractors[i]).change(function() {\n                    clickDistractorButton($(this), questionid, optionHighlighting);\n                });\n            }\n\n            var options = $('table#questiontable' + questionid + ' input.optionradio');\n\n            for (var j = 0; j < options.length; j++) {\n                $(options[j]).change(function() {\n                    clickoption($(this), questionid, optionHighlighting);\n                });\n            }\n\n            linethroughrows(questionid);\n            highlightrows(questionid, optionHighlighting);\n            toggleclearselection(questionid);\n        },\n        initReadonly: function(questionid) {\n            linethroughrows(questionid);\n        }\n    };\n});"],"file":"question_behaviour.min.js"}